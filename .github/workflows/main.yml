name: Electron Build and Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: macos-latest
            node_js: "16"
          - os: windows-latest
            node_js: "16"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_js }}

      - name: Install dependencies
        run: |
          yarn --frozen-lockfile

      - name: Build Electron app
        run: |
          if [ "$RUN_ON" == "macos" ]; then
            yarn release --mac
          elif [ "$RUN_ON" == "windows" ]; then
            yarn release --win
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: true
          prerelease: false

      - name: Upload Release Asset (macOS)
        id: upload-release-asset-macos
        run: |
          zip_files=($(find ./dist -name "*.zip"))
          for file in "${zip_files[@]}"; do
            echo "Uploading $file"
            curl -sSL \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$UPLOAD_URL?name=$(basename "$file")"
          done

      - name: Upload Release Asset (Windows)
        id: upload-release-asset-windows
        run: |
          exe_files=($(find ./dist -name "*.exe"))
          for file in "${exe_files[@]}"; do
            echo "Uploading $file"
            curl -sSL \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/octet-stream" \
              --data-binary @"$file" \
              "$UPLOAD_URL?name=$(basename "$file")"
          done
