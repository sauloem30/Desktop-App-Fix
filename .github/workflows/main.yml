name: Electron Build and Publish

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            node_js: "14"
          - os: macos-latest
            node_js: "14"

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_js }}

      - name: Install dependencies
        run: |
          yarn --frozen-lockfile

      - name: Build Electron app
        run: |
          if [ "$RUN_ON" == "linux" ]; then
            docker run --rm \
              --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
              -v ${PWD}:/project \
              -v ~/.cache/electron:/root/.cache/electron \
              -v ~/.cache/electron-builder:/root/.cache/electron-builder \
              electronuserland/builder:wine \
              /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
          elif [ "$RUN_ON" == "macos" ]; then
            yarn release --mac
          else
            yarn release
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./path/to/your/release/assets
          asset_name: your-asset-name.ext
          asset_content_type: application/octet-stream
